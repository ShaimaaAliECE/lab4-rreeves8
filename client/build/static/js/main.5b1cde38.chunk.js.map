{"version":3,"sources":["logo.svg","api/api.js","App.js","index.js"],"names":["axios","create","baseURL","testData","require","Question","props","onValChange","event","value","qNum","optionNum","Number","target","id","state","changeAnswer","getAnswer","question","options","feedBack","checked","bind","a","this","console","log","api","post","then","response","data","setState","optionsHtml","i","length","correct","className","type","onChange","React","Component","App","setAnswer","prevAnswer","answers","onSubmitForm","score","getdata","q","stem","get","questions","submission","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1cde38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\r\n\r\nexport default axios.create({baseURL: 'http://34.130.115.81:80'})","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport api from './api/api';\nconst testData = require( './questions.json')\n\nclass Question extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tquestion: props.question,\n\t\t\toptions: props.options,\n\t\t\tfeedBack: \"\",\n\t\t\tchecked: props.options[0],\n\t\t\toptionNum: 0,\n\t\t\tchangeAnswer: props.changeAnswer\n\t\t}\n\t\t\n\t\tlet value = {\n\t\t\tqNum: this.props.qNum,\n\t\t\toptionNum: 0\n\t\t}\n\t\tthis.getAnswer = this.getAnswer.bind(this);\n\n\t\tthis.state.changeAnswer(value)\n\t}\n\n\tasync getAnswer(event) {\n\t\tlet value = {\n\t\t\tqNum: Number(this.props.qNum),\n\t\t\toptionNum: Number(event.target.id)\n\t\t}\n\n\t\tconsole.log(\"getting feedback\")\n\t\t\n\t\ttry{\n            const response = await api.post('/api/feedback', {\n\t\t\t\t...value\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif(response.data){\n\t\t\t\t\tconsole.log(\"feedback correct\")\n\t\t\t\t\t\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tfeedBack: \"Correct\",\n\t\t\t\t\t\tchecked: event.target.value,\n\t\t\t\t\t\toptionNum: Number(event.target.id)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(!response.data){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tfeedBack: \"Wrong\",\n\t\t\t\t\t\tchecked: event.target.value,\n\t\t\t\t\t\toptionNum: Number(event.target.id)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t})\n            \n        }\n        catch(err){\n            console.log(err)\n        }\n\t}\n\n\tonValChange = (event) => {\n\t\tlet value = {\n\t\t\tqNum: this.props.qNum,\n\t\t\toptionNum: Number(event.target.id)\n\t\t}\n\n\t\tthis.state.changeAnswer(value);\n\n\t\tthis.getAnswer(event);\n\t}\n\t\n\n\trender(){\n\t\tlet optionsHtml = []\n\n\t\tfor(let i = 0; i < this.state.options.length; i++){\n\t\t\tlet correct;\n\n\t\t\tif(this.state.feedBack !== ''){\n\t\t\t\tif(i === Number(this.state.optionNum)){\n\t\t\t\t\tcorrect = <a className = {this.state.feedBack}>{this.state.feedBack}</a>;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toptionsHtml[i] =  <label className = \"options\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid = {i}\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\tvalue= {this.state.options[i]}\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.checked === this.state.options[i]}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onValChange}/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span>{this.state.options[i]} {correct}</span>\n\t\t\t\t\t\t\t\t</label>\t\t\t\t\t\t\t\t\t\t\n\t\t}\n\n\t\treturn(\n\t\t\t<div className = \"holder\">\n\t\t\t\t<div className = \"question\">\n\t\t\t\t\t<h1 className = \"question-header\">{this.state.question}</h1>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t{optionsHtml}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\n\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper();\n\t\t\n\t\t//state stores the, score- null if submit button not press, answers stores the users answers, and data which is null if not retreived from server\n\t\tthis.state = {\n\t\t\tdata: null,\n\t\t\tanswers: [],\n\t\t\tscore: null\n\t\t}\n\n\t\tthis.getAnswer = this.getAnswer.bind(this)\n\t\tthis.getdata = this.getdata.bind(this)\n\t\tthis.setAnswer = this.setAnswer.bind(this)\n\t}\n\n\t//test function for testing the react without the need for the server running\n\tgetDataTest(){\n\t\tlet q = []\n\n    \tfor(let i = 0; i < testData.length; i ++){\n\t\t\tq[i] = {\n\t\t\t\tstem: testData[i].stem,\n\t\t\t\toptions: testData[i].options\n\t\t\t}\n    \t}\n\t\t\n\t\tthis.setState({\n\t\t\tdata: q\t\n\t\t})\n\t}\n\n\t//axios function for getting server data\n    async getdata(){\n        try{\n            const response = await api.get('/api/data')\n            console.log(response.data)\n\t\t\tthis.setState({\n                data: response.data,\n            })\n        }\n        catch(err){\n            console.log(err)\n        }\n\n\t}\n\n\t//set the answer state value, this function is passed as a property to each question\n\tsetAnswer = (value) => {\n\t\tconsole.log(value)\n\t\tlet prevAnswer = this.state.answers;\n\n\t\tprevAnswer[value.qNum] = value.optionNum;\n\n\t\tthis.setState({\n\t\t\tanswers: prevAnswer\n\t\t})\n\t}\n\n\t//when submit it clicked, upload the data\n\tonSubmitForm = () => {\n\t\tthis.getAnswer()\n\t}\n\n\tasync getAnswer(){\n\t\ttry{\n\t\t\tconsole.log(this.state.answers)\n            const response = await api.post('/api/answers', {\n\t\t\t\t...this.state.answers\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tscore: response.data\n\t\t\t\t})\n\t\t\t})\n            \n        }\n        catch(err){\n            console.log(err)\n        }\n\t}\n\n\trender(){\n\t\tif(this.state.data === null){\n\t\t\tthis.getdata();\n\t\t\t//this.getDataTest()\n\t\t\treturn(\n\t\t\t\t<div>Loading</div>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\tlet questions = []\n\t\t\tlet score = <h1 className = \"answer\"> 0/5 </h1>;\n\t\t\tlet submission = <button className = \"submit-button\" onClick = {this.onSubmitForm}> Submit</button>\n\n\t\t\tif(this.state.score !== null){\n\t\t\t\tscore = <h1 className = \"answer\">{this.state.score}/5</h1>\n\t\t\t\tsubmission = <button className = \"submit-button\"> Submitted </button>\n\t\t\t}\n\n\t\t\tfor(let i = 0; i < this.state.data.length; i ++){\n\t\t\t\tquestions[i] = <Question\n\t\t\t\t\t\t\t\t\tqNum = {i}\n\t\t\t\t\t\t\t\t\tquestion = {this.state.data[i].stem}\n\t\t\t\t\t\t\t\t\toptions = {this.state.data[i].options}\n\t\t\t\t\t\t\t\t\tchangeAnswer = {this.setAnswer}\n\t\t\t\t\t\t\t   />\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<header className = \"title\">\n\t\t\t\t\t\tQuiz\n\t\t\t\t\t</header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{questions}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className = \"submission-holder\">\n\t\t\t\t\t\t{submission}\n\t\t\t\t\t\t{score}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\t\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}